@page "/quiz"
@using QuizManager.Data
@inject QuizService QuizRepo

@code {
    List<QuizItem> quiz;
    int currentScore = 0;
    List<int> quizScores = new List<int>();
    
    protected override async Task OnInitializedAsync(){
        quiz = await QuizRepo.GetQuizAsync();
    }

    void UpdateScore(int chosenAnswerIndex, int quizIndex)
    {
        var quizItem = quiz[quizIndex];

        if (chosenAnswerIndex == quizItem.AnswerIndex)
        {
            quizScores[quizIndex] = quizItem.Score;
        } else
        {
            quizScores[quizIndex] = 0;
        }
        currentScore = quizScores.Sum();
    }
}

<h1>Take your quiz!</h1>
<p>Your current score is @currentScore</p>

@if (quiz == null){
    <p><em>Loading...</em></p>
}else{
    int quizIndex = 0;
    @foreach (var item in quiz)
    {
        <section>
            <h3>@item.Question</h3>
            <div class="form-check">
            @{
                int choiceIndex = 0;
                quizScores.Add(0);
            }
            @foreach (var choice in item.Choices)
            {
                int currentQuizIndex = quizIndex;
                <input class="form-check-input" type="radio" name="@quizIndex" value="@choiceIndex" @onchange="@((eventArgs) => UpdateScore(Convert.ToInt32(eventArgs.Value), currentQuizIndex))"/>@choice<br>

                choiceIndex++;
            }
            </div>
        </section>
        quizIndex++;
    }
}

